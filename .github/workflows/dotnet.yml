name: .NET CI

# Fluxo de trabalho para eventos de push
on:
  push:
    branches:
      - "development"
      - "main"  

  # Fluxo de trabalho para eventos de pull request
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Passo 1: Clonar o repositório
    - name: Checkout code
      uses: actions/checkout@v4

    # Passo 2: Fetch all branches
    - name: Fetch all branches
      run: git fetch --all

    # Passo 3: Trocar para a branch de desenvolvimento
    - name: Checkout development branch
      run: git checkout development

    # Passo 4: Instalar o compilador/interpretador .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x  # Instalar versão 8 do .NET

    # Passo 5: Instalar as dependências do projeto
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./ProdutosAPI

    # Passo 6: Compilar o projeto
    - name: Build project
      run: dotnet build --no-restore
      working-directory: ./ProdutosAPI

  quality:
    runs-on: windows-latest
    needs: build  

    steps:
    # Passo 1: Clonar o repositório
    - name: Checkout code
      uses: actions/checkout@v4

    # Passo 2: Instalar o compilador/interpretador .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x  # Instalar versão 8 do .NET

    # Passo 3: Restaurar dependências
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./ProdutosAPI

    # Passo 4: Executar testes (unitários e integração)
    - name: Run unit and integration tests
      run: dotnet test --no-build --verbosity normal
      working-directory: ../ProdutosAPI.Teste

    # Passo 5: Verificação de cobertura de código
    - name: Run code coverage
      run: dotnet test --no-build --collect:"Code Coverage"
      working-directory: ./ProdutosAPI.Teste
